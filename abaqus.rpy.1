# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2020 replay file
# Internal Version: 2019_09_13-19.49.31 163176
# Run by p1340760 on Mon Nov 22 16:02:09 2021
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=146.451553344727, 
    height=188.066665649414)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
cliCommand("""# Modell zum Auswaehlen, & Auswerten""")
cliCommand("""# MP, 2021-11-22""")
cliCommand("""from abaqus import *""")
cliCommand("""from abaqusConstants import *""")
cliCommand("""from caeModules import *""")
cliCommand("""TOL = 1e-4""")
cliCommand("""session.journalOptions.setValues(replayGeometry=COORDINATE,
        		         recoverGeometry=COORDINATE)""")
cliCommand("""# Parameter vom Modell (N-mm-s)""")
cliCommand("""# ------------------------------------------------------""")
cliCommand("""b,h = 20.,12.""")
cliCommand("""r = 2.""")
cliCommand("""cent_list = ((6.,6.),(12.,8.))""")
cliCommand("""E = 210000.""")
cliCommand("""nu = 0.3""")
cliCommand("""sig_y = 300.""")
cliCommand("""E_pl = 15000.""")
cliCommand("""# Modell erstellen""")
cliCommand("""# ------------------------------------------------------------------""")
cliCommand("""model_name = 'geometrie-sachen'""")
cliCommand("""Mdb()""")
#: A new model database has been created.
#: The model "Model-1" has been created.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
#: mdb
cliCommand("""mdb.models.changeKey(fromName='Model-1', toName=model_name)""")
\
    cliCommand("""model = mdb.models[model_name]""")
cliCommand("""# unser Material erzeugen""")
cliCommand("""mat = model.Material(name='steel')""")
cliCommand("""mat.Elastic(table=((E,nu), ))""")
#: mdb.models['geometrie-sachen'].materials['steel'].elastic
cliCommand("""mat.Plastic(table=((sig_y, 0.0), (sig_y+E_pl, 1.0)))""")
#: mdb.models['geometrie-sachen'].materials['steel'].plastic
cliCommand("""# Platte mit loechern zeichnen""")
cliCommand("""# -------------------------------------------""")
cliCommand("""s = model.ConstrainedSketch(name='platte', sheetSize=200.0)""")
\
    cliCommand("""s.rectangle(point1=(0.0, 0.0), point2=(b,h))""")
cliCommand("""# Schleife ueber alle Kreise""")
cliCommand("""for cent in cent_list:
	s.CircleByCenterPerimeter(center=cent, point1=(cent[0]+r,cent[1]))
""")
#: mdb.models['geometrie-sachen'].sketches['platte'].geometry.findAt((4.0, 6.0),)
#: mdb.models['geometrie-sachen'].sketches['platte'].geometry.findAt((10.0, 8.0),)
cliCommand("""# 2d Part erstellen, part nennen""")
cliCommand("""part = model.Part(dimensionality=TWO_D_PLANAR, name='Platte', type=DEFORMABLE_BODY)""")
cliCommand("""part.BaseShell(sketch=s)""")
#: mdb.models['geometrie-sachen'].parts['Platte'].features['Shell planar-1']
cliCommand("""# Sets erstellen""")
cliCommand("""# -------------------------------------------""")
cliCommand("""# linke Kante in Set: a) mit findAt, b) mit getByBoundingBox""")
cliCommand("""part.Set(name='links', edges=part.edges.findAt(coordinates=[[0,h/2,0]]))""")
#: mdb.models['geometrie-sachen'].parts['Platte'].sets['links']
cliCommand("""part.Set(name='links', edges=part.edges.getByBoundingBox(xMax=TOL))""")
#: mdb.models['geometrie-sachen'].parts['Platte'].sets['links']
cliCommand("""# nur edges mit Laenge h in Liste (Koordinaten)""")
cliCommand("""# Vriante mit Schleife""")
cliCommand("""size_12_list = []""")
cliCommand("""for edge in part.edges:
    print(edge)
    edge_size = edge.getSize()
    #print(edge.pointOn)
    edge_coord_list = list(edge.pointOn[0])
    if edge_size == h:
        size_12_list = size_12_list + [edge_coord_list]
""")
#: ({'featureName': 'Shell planar-1', 'index': 0, 'instanceName': None, 'isReferenceRep': False, 'pointOn': ((12.0, 10.0, 0.0),)})
#: Length of edge = 12.5663706143592
#: ({'featureName': 'Shell planar-1', 'index': 1, 'instanceName': None, 'isReferenceRep': False, 'pointOn': ((6.0, 8.0, 0.0),)})
#: Length of edge = 12.5663706143592
#: ({'featureName': 'Shell planar-1', 'index': 2, 'instanceName': None, 'isReferenceRep': False, 'pointOn': ((15.0, 0.0, 0.0),)})
#: Length of edge = 20
#: ({'featureName': 'Shell planar-1', 'index': 3, 'instanceName': None, 'isReferenceRep': False, 'pointOn': ((20.0, 9.0, 0.0),)})
#: Length of edge = 12
#: ({'featureName': 'Shell planar-1', 'index': 4, 'instanceName': None, 'isReferenceRep': False, 'pointOn': ((5.0, 12.0, 0.0),)})
#: Length of edge = 20
#: ({'featureName': 'Shell planar-1', 'index': 5, 'instanceName': None, 'isReferenceRep': False, 'pointOn': ((0.0, 3.0, 0.0),)})
#: Length of edge = 12
cliCommand("""# Set aus diesen Edges""")
cliCommand("""part.Set(name='aussen-edges-schleife', 
         edges=part.edges.findAt(coordinates=size_12_list))""")
#: mdb.models['geometrie-sachen'].parts['Platte'].sets['aussen-edges-schleife']
cliCommand("""# mit list comprehension in nur einer Zeile das Gleiche wie Schleife""")
cliCommand("""size_12_list = [list(i.pointOn[0]) for i in part.edges if i.getSize()==h]""")
#: Length of edge = 12.5663706143592
#: Length of edge = 12.5663706143592
#: Length of edge = 20
#: Length of edge = 12
#: Length of edge = 20
#: Length of edge = 12
cliCommand("""# Set aus diesen Edges""")
cliCommand("""part.Set(name='aussen-edges-direkt', 
         edges=part.edges.findAt(coordinates=size_12_list))""")
#: mdb.models['geometrie-sachen'].parts['Platte'].sets['aussen-edges-direkt']
cliCommand("""# Referenzpunkte sind etwas umstaendlich""")
cliCommand("""rp = model.parts['Platte'].ReferencePoint(point=(0,0,0))""")
cliCommand("""part.Set(name='RP', referencePoints=(part.referencePoints[rp.id], ))""")
#: mdb.models['geometrie-sachen'].parts['Platte'].sets['RP']
cliCommand("""# datum planes auch ;-)""")
cliCommand("""dp1 = part.DatumPlaneByPrincipalPlane(offset=10.0, principalPlane=YZPLANE)""")
cliCommand("""part.PartitionFaceByDatumPlane(datumPlane=part.datums[dp1.id],
				               faces=part.faces)""")
#: mdb.models['geometrie-sachen'].parts['Platte'].features['Partition face-1']
cliCommand("""# Error zurueckgeben und Skriptausfuehrung abbrechen""")
cliCommand("""# Praktisch zum Testen des Skripts""")
cliCommand("""raise ValueError('alles in Ordnung?')	""")
#* ValueError: alles in Ordnung?
p = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].view.setValues(nearPlane=44.3186, 
    farPlane=65.1149, width=21.8904, height=24.8558, viewOffsetX=0.903132, 
    viewOffsetY=0.403522)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=42.5031, 
    farPlane=66.9303, width=28.958, height=32.8808, viewOffsetX=4.42357, 
    viewOffsetY=0.627073)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
cliCommand("""part.Set(name='all-edg', edges=part.edges)""")
#: mdb.models['geometrie-sachen'].parts['Platte'].sets['all-edg']
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
a=mdb.models['geometrie-sachen'].parts['Platte']
a.SetByBoolean(name='all-except-outer', operation=DIFFERENCE, sets=(
    a.sets['all-edg'], a.sets['aussen-edges-direkt'], ))
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].setValues(displayedObject=None)
import job
mdb.models['geometrie-sachen'].keywordBlock.synchVersions(
    storeNodesAndElements=False)
#: Warning: The assembly is empty; therefore, an analysis 
#: cannot be performed on this model.
mdb.models['geometrie-sachen'].keywordBlock.setValues(edited = 0)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON, 
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
mdb.saveAs(
    pathName='C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/manuell-fuer-out')
#: The model database has been saved to "C:\Users\p1340760\Desktop\Python-Projekte\GitHub\lv_abq_python_2021\manuell-fuer-out.cae".
mdb.models['geometrie-sachen'].HomogeneousSolidSection(name='steel', 
    material='steel', thickness=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=44.0911, 
    farPlane=65.3424, width=20.7236, height=23.5309, viewOffsetX=0.207524, 
    viewOffsetY=3.84633)
p = mdb.models['geometrie-sachen'].parts['Platte']
f = p.faces
faces = f.findAt(((8.61592, 6.921789, 0.0), ), ((10.050747, 5.078211, 0.0), ))
region = p.Set(faces=faces, name='all')
p = mdb.models['geometrie-sachen'].parts['Platte']
p.SectionAssignment(region=region, sectionName='steel', offset=0.0, 
    offsetType=MIDDLE_SURFACE, offsetField='', 
    thicknessAssignment=FROM_SECTION)
a = mdb.models['geometrie-sachen'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
a = mdb.models['geometrie-sachen'].rootAssembly
a.DatumCsysByDefault(CARTESIAN)
p = mdb.models['geometrie-sachen'].parts['Platte']
a.Instance(name='Platte-1', part=p, dependent=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['geometrie-sachen'].StaticStep(name='innendruck', 
    previous='Initial')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='innendruck')
session.viewports['Viewport: 1'].view.setValues(nearPlane=43.0118, 
    farPlane=66.4217, width=29.1851, height=33.1387, viewOffsetX=4.66639, 
    viewOffsetY=-1.94318)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=42.7355, 
    farPlane=66.6979, width=30.9748, height=35.1708, viewOffsetX=2.98872, 
    viewOffsetY=4.99004)
p = mdb.models['geometrie-sachen'].parts['Platte']
v = p.vertices
verts = v.findAt(((20.0, 12.0, 0.0), ))
p.Set(vertices=verts, name='right-top')
#: The set 'right-top' has been created (1 vertex).
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p = mdb.models['geometrie-sachen'].parts['Platte']
e = p.edges
edges = e.findAt(((7.5, 0.0, 0.0), ), ((17.5, 0.0, 0.0), ))
p.Set(edges=edges, name='bottom')
#: The set 'bottom' has been created (2 edges).
p = mdb.models['geometrie-sachen'].parts['Platte']
s = p.edges
side1Edges = s.findAt(((6.0, 8.0, 0.0), ), ((13.414214, 9.414214, 0.0), ), ((
    10.585786, 6.585786, 0.0), ))
p.Surface(side1Edges=side1Edges, name='innendruck')
#: The surface 'innendruck' has been created (3 edges).
p1 = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
a = mdb.models['geometrie-sachen'].rootAssembly
a.regenerate()
a = mdb.models['geometrie-sachen'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, adaptiveMeshConstraints=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
a = mdb.models['geometrie-sachen'].rootAssembly
region = a.instances['Platte-1'].sets['links']
mdb.models['geometrie-sachen'].DisplacementBC(name='xsym', 
    createStepName='Initial', region=region, u1=SET, u2=UNSET, ur3=UNSET, 
    amplitude=UNSET, distributionType=UNIFORM, fieldName='', localCsys=None)
a = mdb.models['geometrie-sachen'].rootAssembly
region = a.instances['Platte-1'].sets['bottom']
mdb.models['geometrie-sachen'].DisplacementBC(name='ysym', 
    createStepName='Initial', region=region, u1=UNSET, u2=SET, ur3=UNSET, 
    amplitude=UNSET, distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='innendruck')
a = mdb.models['geometrie-sachen'].rootAssembly
region = a.instances['Platte-1'].surfaces['innendruck']
mdb.models['geometrie-sachen'].Pressure(name='Load-1', 
    createStepName='innendruck', region=region, distributionType=UNIFORM, 
    field='', magnitude=10.0, amplitude=UNSET)
session.viewports['Viewport: 1'].view.setValues(nearPlane=43.7525, 
    farPlane=65.6809, width=25.1667, height=28.5759, viewOffsetX=3.07282, 
    viewOffsetY=-0.256122)
mdb.save()
#: The model database has been saved to "C:\Users\p1340760\Desktop\Python-Projekte\GitHub\lv_abq_python_2021\manuell-fuer-out.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON, loads=OFF, 
    bcs=OFF, predefinedFields=OFF, connectors=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
p = mdb.models['geometrie-sachen'].parts['Platte']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p = mdb.models['geometrie-sachen'].parts['Platte']
p.seedPart(size=1.2, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['geometrie-sachen'].parts['Platte']
p.seedPart(size=0.8, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['geometrie-sachen'].parts['Platte']
p.generateMesh()
elemType1 = mesh.ElemType(elemCode=CPS4R, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT)
elemType2 = mesh.ElemType(elemCode=CPS3, elemLibrary=STANDARD)
p = mdb.models['geometrie-sachen'].parts['Platte']
f = p.faces
faces = f.findAt(((8.61592, 6.921789, 0.0), ), ((10.050747, 5.078211, 0.0), ))
pickedRegions =(faces, )
p.setElementType(regions=pickedRegions, elemTypes=(elemType1, elemType2))
mdb.save()
#: The model database has been saved to "C:\Users\p1340760\Desktop\Python-Projekte\GitHub\lv_abq_python_2021\manuell-fuer-out.cae".
a1 = mdb.models['geometrie-sachen'].rootAssembly
a1.regenerate()
a = mdb.models['geometrie-sachen'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
mdb.Job(name='Job-1', model='geometrie-sachen', description='', type=ANALYSIS, 
    atTime=None, waitMinutes=0, waitHours=0, queue=None, memory=9000, 
    memoryUnits=MEGA_BYTES, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, multiprocessingMode=DEFAULT, numCpus=4, 
    numDomains=4, numGPUs=0)
mdb.jobs.changeKey(fromName='Job-1', toName='platte-manuell')
mdb.save()
#: The model database has been saved to "C:\Users\p1340760\Desktop\Python-Projekte\GitHub\lv_abq_python_2021\manuell-fuer-out.cae".
mdb.jobs['platte-manuell'].submit(consistencyChecking=OFF)
#: The job input file "platte-manuell.inp" has been submitted for analysis.
o3 = session.openOdb(
    name='C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb')
#: Model: C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       8
#: Number of Node Sets:          9
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=47.6338, 
    farPlane=84.3056, width=28.6367, height=32.516, viewOffsetX=3.372, 
    viewOffsetY=0.969692)
a = mdb.models['geometrie-sachen'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
regionDef=mdb.models['geometrie-sachen'].rootAssembly.allInstances['Platte-1'].sets['right-top']
mdb.models['geometrie-sachen'].HistoryOutputRequest(name='H-Output-2', 
    createStepName='innendruck', variables=('U1', ), region=regionDef, 
    sectionPoints=DEFAULT, rebar=EXCLUDE)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
del mdb.jobs['platte-manuell']
mdb.Job(name='platte-manuell', model='geometrie-sachen', description='', 
    type=ANALYSIS, atTime=None, waitMinutes=0, waitHours=0, queue=None, 
    memory=9000, memoryUnits=MEGA_BYTES, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, multiprocessingMode=DEFAULT, numCpus=4, 
    numDomains=4, numGPUs=0)
mdb.jobs['platte-manuell'].submit(consistencyChecking=OFF)
#: The job input file "platte-manuell.inp" has been submitted for analysis.
mdb.save()
#: The model database has been saved to "C:\Users\p1340760\Desktop\Python-Projekte\GitHub\lv_abq_python_2021\manuell-fuer-out.cae".
o3 = session.openOdb(
    name='C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb')
#: Model: C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       8
#: Number of Node Sets:          9
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.2602, 
    farPlane=81.6791, width=23.399, height=26.5688, viewOffsetX=0.960514, 
    viewOffsetY=-0.922519)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.2511, 
    farPlane=82.6882, width=20.2603, height=23.0049, viewOffsetX=1.38263, 
    viewOffsetY=1.7395)
odb = session.odbs['C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb']
xy1 = xyPlot.XYDataFromHistory(odb=odb, 
    outputVariableName='Spatial displacement: U1 at Node 8 in NSET RIGHT-TOP', 
    steps=('innendruck', ), suppressQuery=True, __linkedVpName__='Viewport: 1')
c1 = session.Curve(xyData=xy1)
xyp = session.XYPlot('XYPlot-1')
chartName = xyp.charts.keys()[0]
chart = xyp.charts[chartName]
chart.setValues(curvesToPlot=(c1, ), )
session.charts[chartName].autoColor(lines=True, symbols=True)
session.viewports['Viewport: 1'].setValues(displayedObject=xyp)
a = mdb.models['geometrie-sachen'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['geometrie-sachen'].historyOutputRequests['H-Output-2'].setValues(
    variables=('U1', 'U2'))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
del mdb.jobs['platte-manuell']
mdb.Job(name='platte-manuell', model='geometrie-sachen', description='', 
    type=ANALYSIS, atTime=None, waitMinutes=0, waitHours=0, queue=None, 
    memory=9000, memoryUnits=MEGA_BYTES, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, multiprocessingMode=DEFAULT, numCpus=4, 
    numDomains=4, numGPUs=0)
mdb.jobs['platte-manuell'].submit(consistencyChecking=OFF)
#: The job input file "platte-manuell.inp" has been submitted for analysis.
xyp = session.xyPlots['XYPlot-1']
session.viewports['Viewport: 1'].setValues(displayedObject=xyp)
odb = session.odbs['C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb']
session.viewports['Viewport: 1'].setValues(displayedObject=odb)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    UNDEFORMED, ))
#* VisError: The output database 
#* C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb 
#* disk file has changed.
#* 
#* The current plot operation has been canceled, re-open the file to view the 
#* results
o1 = session.openOdb(
    name='C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o1)
#: Model: C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       8
#: Number of Node Sets:          9
#: Number of Steps:              1
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].restore()
session.Viewport(name='Viewport: 2', origin=(5.59687471389771, 
    -47.5999984741211), width=155.779678344727, height=230.066665649414)
session.viewports['Viewport: 2'].makeCurrent()
session.viewports['Viewport: 1'].setValues(origin=(0.0, -47.6000061035156), 
    width=103.775382995605, height=235.66667175293)
session.viewports['Viewport: 2'].setValues(origin=(103.775382995605, 
    -47.6000061035156), width=103.775382995605, height=235.66667175293)
session.viewports['Viewport: 1'].setValues(origin=(0.0, -28.9333343505859), 
    height=217.0)
session.viewports['Viewport: 2'].setValues(origin=(103.775382995605, 
    -28.9333343505859), height=217.0)
session.viewports['Viewport: 1'].setValues(origin=(0.0, 79.5666656494141), 
    width=207.550765991211, height=108.5)
session.viewports['Viewport: 2'].setValues(origin=(0.0, -28.9333343505859), 
    width=207.550765991211, height=108.5)
session.viewports['Viewport: 1'].view.setValues(nearPlane=47.8111, 
    farPlane=84.1282, width=30.6301, height=15.1147, viewOffsetX=0.48574, 
    viewOffsetY=0.671354)
session.viewports['Viewport: 2'].view.fitView()
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].view.fitView()
session. linkedViewportCommands.setValues(linkViewports=True)
session.viewports['Viewport: 1'].view.setValues(width=29.6065, height=14.6095, 
    viewOffsetX=0.183695, viewOffsetY=-0.0282766)
session.viewports['Viewport: 2'].view.setValues(width=29.6065, height=14.6095, 
    viewOffsetX=0.183695, viewOffsetY=-0.0282766)
session.viewports['Viewport: 1'].view.setValues(width=29.8711, height=14.7401, 
    viewOffsetX=0.355479, viewOffsetY=-0.0553467)
session.viewports['Viewport: 2'].view.setValues(width=29.8711, height=14.7401, 
    viewOffsetX=0.355479, viewOffsetY=-0.0553467)
session.viewports['Viewport: 1'].view.setValues(width=31.7489, height=15.6667, 
    viewOffsetX=0.543485, viewOffsetY=-0.085619)
session.viewports['Viewport: 2'].view.setValues(width=31.7489, height=15.6667, 
    viewOffsetX=0.543485, viewOffsetY=-0.085619)
session.viewports['Viewport: 1'].view.setValues(width=33.5572, height=16.5591, 
    viewOffsetX=0.736742, viewOffsetY=-0.117116)
session.viewports['Viewport: 2'].view.setValues(width=33.5572, height=16.5591, 
    viewOffsetX=0.736742, viewOffsetY=-0.117116)
session.viewports['Viewport: 1'].view.setValues(width=35.4757, height=17.5057, 
    viewOffsetX=0.935308, viewOffsetY=-0.155105)
session.viewports['Viewport: 2'].view.setValues(width=35.4757, height=17.5057, 
    viewOffsetX=0.935308, viewOffsetY=-0.155105)
session.viewports['Viewport: 1'].view.setValues(width=37.4878, height=18.4986, 
    viewOffsetX=1.14376, viewOffsetY=-0.194987)
session.viewports['Viewport: 2'].view.setValues(width=37.4878, height=18.4986, 
    viewOffsetX=1.14376, viewOffsetY=-0.194987)
session.viewports['Viewport: 1'].view.setValues(width=42.2991, height=20.8728, 
    viewOffsetX=1.6202, viewOffsetY=-0.285951)
session.viewports['Viewport: 2'].view.setValues(width=42.2991, height=20.8728, 
    viewOffsetX=1.6202, viewOffsetY=-0.285951)
session.viewports['Viewport: 1'].view.setValues(width=39.0854, height=19.287, 
    viewOffsetX=1.26381, viewOffsetY=-0.0995491)
session.viewports['Viewport: 2'].view.setValues(width=39.0854, height=19.287, 
    viewOffsetX=1.26381, viewOffsetY=-0.0995491)
session.viewports['Viewport: 1'].view.setValues(width=37.1646, height=18.3391, 
    viewOffsetX=0.9657, viewOffsetY=0.0665274)
session.viewports['Viewport: 2'].view.setValues(width=37.1646, height=18.3391, 
    viewOffsetX=0.9657, viewOffsetY=0.0665274)
session.viewports['Viewport: 1'].view.setValues(width=35.1731, height=17.3564, 
    viewOffsetX=0.676346, viewOffsetY=0.220141)
session.viewports['Viewport: 2'].view.setValues(width=35.1731, height=17.3564, 
    viewOffsetX=0.676346, viewOffsetY=0.220141)
session.viewports['Viewport: 1'].view.setValues(width=33.295, height=16.4297, 
    viewOffsetX=0.400957, viewOffsetY=0.364254)
session.viewports['Viewport: 2'].view.setValues(width=33.295, height=16.4297, 
    viewOffsetX=0.400957, viewOffsetY=0.364254)
session.viewports['Viewport: 1'].view.setValues(width=31.5033, height=15.5455, 
    viewOffsetX=0.138529, viewOffsetY=0.501544)
session.viewports['Viewport: 2'].view.setValues(width=31.5033, height=15.5455, 
    viewOffsetX=0.138529, viewOffsetY=0.501544)
session.viewports['Viewport: 1'].view.setValues(width=29.7978, height=14.7039, 
    viewOffsetX=-0.111323, viewOffsetY=0.632263)
session.viewports['Viewport: 2'].view.setValues(width=29.7978, height=14.7039, 
    viewOffsetX=-0.111323, viewOffsetY=0.632263)
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(COMPONENT, 
    'S11'), )
session.viewports['Viewport: 1'].view.setValues(width=31.8868, height=15.7348, 
    viewOffsetX=-0.0445827, viewOffsetY=0.612064)
session.viewports['Viewport: 2'].view.setValues(width=31.8868, height=15.7348, 
    viewOffsetX=-0.0445827, viewOffsetY=0.612064)
session.viewports['Viewport: 1'].view.setValues(width=33.6784, height=16.6189, 
    viewOffsetX=0.0269215, viewOffsetY=0.582394)
session.viewports['Viewport: 2'].view.setValues(width=33.6784, height=16.6189, 
    viewOffsetX=0.0269215, viewOffsetY=0.582394)
session.viewports['Viewport: 1'].view.setValues(width=35.6058, height=17.5699, 
    viewOffsetX=0.10444, viewOffsetY=0.552061)
session.viewports['Viewport: 2'].view.setValues(width=35.6058, height=17.5699, 
    viewOffsetX=0.10444, viewOffsetY=0.552061)
session.viewports['Viewport: 1'].view.setValues(width=33.2446, height=16.4048, 
    viewOffsetX=0.021752, viewOffsetY=0.570067)
session.viewports['Viewport: 2'].view.setValues(width=33.2446, height=16.4048, 
    viewOffsetX=0.021752, viewOffsetY=0.570067)
session.viewports['Viewport: 1'].view.setValues(width=31.5088, height=15.5483, 
    viewOffsetX=-0.0557733, viewOffsetY=0.595371)
session.viewports['Viewport: 2'].view.setValues(width=31.5088, height=15.5483, 
    viewOffsetX=-0.0557733, viewOffsetY=0.595371)
session.viewports['Viewport: 1'].view.setValues(width=29.7972, height=14.7036, 
    viewOffsetX=-0.129595, viewOffsetY=0.616267)
session.viewports['Viewport: 2'].view.setValues(width=29.7972, height=14.7036, 
    viewOffsetX=-0.129595, viewOffsetY=0.616267)
session.viewports['Viewport: 2'].makeCurrent()
session.viewports['Viewport: 2'].odbDisplay.display.setValues(plotState=(
    UNDEFORMED, ))
session.viewports['Viewport: 2'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 2'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, ))
session.viewports['Viewport: 2'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 2'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 2'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].makeCurrent()
del session.viewports['Viewport: 2']
session.viewports['Viewport: 1'].maximize()
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='RF', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.5414, 
    farPlane=88.0536, width=17.1872, height=19.5154, viewOffsetX=-3.83086, 
    viewOffsetY=-1.52502)
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Mises'), )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(COMPONENT, 
    'S11'), )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(COMPONENT, 
    'S22'), )
session.viewports['Viewport: 1'].view.setValues(nearPlane=55.8107, 
    farPlane=88.7843, width=19.0537, height=21.6348, viewOffsetX=-0.0387923, 
    viewOffsetY=0.566093)
session.viewports['Viewport: 1'].odbDisplay.contourOptions.setValues(
    contourType=QUILT, maxValue=17.5101, minValue=-7.00738)
session.viewports['Viewport: 1'].view.setValues(nearPlane=53.9979, 
    farPlane=90.5971, width=28.4278, height=32.2787, viewOffsetX=3.06674, 
    viewOffsetY=1.64696)
session.viewports['Viewport: 1'].odbDisplay.contourOptions.setValues(
    contourType=BANDED)
session.pngOptions.setValues(imageSize=(1500, 1702))
session.viewports['Viewport: 1'].view.setValues(nearPlane=55.8107, 
    farPlane=88.7843, width=19.0537, height=21.6348, viewOffsetX=0.210025, 
    viewOffsetY=2.32618)
session.printOptions.setValues(vpDecorations=OFF, reduceColors=False)
session.printToFile(fileName='s22-bild', format=PNG, canvasObjects=(
    session.viewports['Viewport: 1'], ))
session.viewports['Viewport: 1'].viewportAnnotationOptions.setValues(triad=OFF, 
    title=OFF, state=OFF, annotations=OFF, compass=OFF)
session.viewports['Viewport: 1'].viewportAnnotationOptions.setValues(
    legendBackgroundStyle=MATCH)
session.printToFile(fileName='s22-bild', format=PNG, canvasObjects=(
    session.viewports['Viewport: 1'], ))
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.setValues(nearPlane=47.7614, 
    farPlane=96.8336, width=79.0971, height=72.1605, viewOffsetX=4.24587, 
    viewOffsetY=7.48309)
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.093, 
    farPlane=88.502, width=21.3761, height=19.5015, viewOffsetX=-0.122969, 
    viewOffsetY=3.07594)
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.6972, 
    farPlane=87.8978, width=19.0914, height=17.4171, viewOffsetX=-0.149302, 
    viewOffsetY=2.80428)
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.5265, 
    farPlane=88.0685, width=19.0339, height=17.3647, viewOffsetX=-0.495588, 
    viewOffsetY=2.57672)
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.5355, 
    farPlane=88.0595, width=19.0369, height=17.3675, viewOffsetX=-0.25839, 
    viewOffsetY=2.65018)
session.View(name='User-1', nearPlane=56.535, farPlane=88.06, width=19.037, 
    height=17.368, projection=PERSPECTIVE, cameraPosition=(10.8, 6.8331, 
    72.298), cameraUpVector=(0, 1, 0), cameraTarget=(10.8, 6.8331, 0), 
    viewOffsetX=-0.25839, viewOffsetY=2.6502, autoFit=OFF)
session.viewports['Viewport: 1'].view.setValues(nearPlane=48.1799, 
    farPlane=96.4151, width=75.0031, height=68.4255, viewOffsetX=0.977537, 
    viewOffsetY=-10.4317)
session.viewports['Viewport: 1'].view.setValues(nearPlane=34.2223, 
    farPlane=92.124, width=53.2748, height=48.6028, cameraPosition=(44.2887, 
    48.6866, 33.7888), cameraUpVector=(-0.171816, 0.745946, -0.643462), 
    cameraTarget=(8.33042, 3.1753, -9.36961), viewOffsetX=0.694347, 
    viewOffsetY=-7.40967)
session.viewports['Viewport: 1'].view.setValues(session.views['User-1'])
session.View(name='User-1', nearPlane=56.535, farPlane=88.06, width=19.037, 
    height=17.368, projection=PERSPECTIVE, cameraPosition=(10.8, 6.8331, 
    72.298), cameraUpVector=(0, 1, 0), cameraTarget=(10.8, 6.8331, 0), 
    viewOffsetX=-0.25839, viewOffsetY=2.6502, autoFit=OFF)
session.View(name='User-1', nearPlane=56.535, farPlane=88.06, width=19.037, 
    height=17.368, projection=PERSPECTIVE, cameraPosition=(10.8, 6.8331, 
    72.298), cameraUpVector=(0, 1, 0), cameraTarget=(10.8, 6.8331, 0), 
    viewOffsetX=-0.25839, viewOffsetY=2.6502, autoFit=OFF)
session.viewports['Viewport: 1'].view.setValues(session.views['User-1'])
session.viewports['Viewport: 1'].view.setValues(session.views['User-1'])
session.viewports['Viewport: 1'].restore()
session.viewports['Viewport: 1'].setValues(origin=(2.79843735694885, 
    77.6999969482422))
session.viewports['Viewport: 1'].setValues(origin=(2.79843735694885, 
    -19.1333312988281), width=233.203109741211, height=205.33332824707)
session.viewports['Viewport: 1'].setValues(origin=(2.79843735694885, 
    -33.8333435058594), width=222.475769042969, height=220.033340454102)
session.viewports['Viewport: 1'].view.setValues(nearPlane=55.8221, 
    farPlane=88.7739, width=22.631, height=21.876, viewOffsetX=0.330277, 
    viewOffsetY=1.87538)
session.viewports['Viewport: 1'].setValues(origin=(10.7273435592651, 
    -34.5333404541016))
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.4372, 
    farPlane=88.1587, width=19.0041, height=18.3701, viewOffsetX=-0.258293, 
    viewOffsetY=2.8994)
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.2406, 
    farPlane=88.3554, width=18.9379, height=18.3061, viewOffsetX=0.0234654, 
    viewOffsetY=3.06996)
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.2285, 
    farPlane=88.3675, width=20.1424, height=19.4704, viewOffsetX=0.0580266, 
    viewOffsetY=3.19996)
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.0315, 
    farPlane=88.5645, width=20.0718, height=19.4022, viewOffsetX=-0.176063, 
    viewOffsetY=3.33766)
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.0429, 
    farPlane=88.5531, width=20.0759, height=19.4062, viewOffsetX=0.0791028, 
    viewOffsetY=3.42346)
session.View(name='User-1', nearPlane=56.043, farPlane=88.553, width=20.076, 
    height=19.406, projection=PERSPECTIVE, cameraPosition=(10.8, 6.8331, 
    72.298), cameraUpVector=(0, 1, 0), cameraTarget=(10.8, 6.8331, 0), 
    viewOffsetX=0.079103, viewOffsetY=3.4235, autoFit=OFF)
session.printToFile(fileName='s22-bild', format=PNG, canvasObjects=(
    session.viewports['Viewport: 1'], ))
session.viewports['Viewport: 1'].view.setValues(session.views['User-1'])
session.viewports['Viewport: 1'].setValues(origin=(-34.0476531982422, 
    -58.1000061035156))
session.viewports['Viewport: 1'].setValues(height=218.399993896484)
session.viewports['Viewport: 1'].maximize()
session.odbs['C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb'].close(
    )
cliCommand("""# Modell zum Auswaehlen, & Auswerten""")
cliCommand("""# MP, 2021-11-22""")
cliCommand("""from abaqus import *""")
cliCommand("""from abaqusConstants import *""")
cliCommand("""from caeModules import *""")
cliCommand("""TOL = 1e-4""")
cliCommand("""session.journalOptions.setValues(replayGeometry=COORDINATE,
        		         recoverGeometry=COORDINATE)""")
cliCommand("""# Parameter vom Modell (N-mm-s)""")
cliCommand("""# ------------------------------------------------------""")
cliCommand("""b,h = 20.,12.""")
cliCommand("""r = 2.""")
cliCommand("""cent_list = ((6.,6.),(12.,8.))""")
cliCommand("""E = 210000.""")
cliCommand("""nu = 0.3""")
cliCommand("""sig_y = 300.""")
cliCommand("""E_pl = 15000.""")
cliCommand("""# Modell erstellen""")
cliCommand("""# ------------------------------------------------------------------""")
cliCommand("""model_name = 'geometrie-sachen'""")
cliCommand("""odb_name = 'platte-manuell'""")
cliCommand("""vp = session.viewports['Viewport: 1']""")
cliCommand("""# open the odb with the odb_name""")
cliCommand("""odb = session.openOdb(name=odb_name+'.odb')""")
#: Model: C:/Users/p1340760/Desktop/Python-Projekte/GitHub/lv_abq_python_2021/platte-manuell.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       8
#: Number of Node Sets:          9
#: Number of Steps:              1
cliCommand("""vp.setValues(displayedObject=odb)""")
cliCommand("""vp.odbDisplay.display.setValues(plotState=(CONTOURS_ON_DEF,))""")
cliCommand("""vp.odbDisplay.setPrimaryVariable(variableLabel='S', outputPosition=INTEGRATION_POINT,
                                 refinement=(COMPONENT, 'S11'),)""")
cliCommand("""# Change size of viewport (e.g. 300x200 pixel)""")
cliCommand("""vp.restore()""")
cliCommand("""# position of the viewport""")
cliCommand("""vp.setValues(origin=(50,-100))""")
cliCommand("""vp.setValues(width=300, height=200)""")
cliCommand("""session.View(name='User-1', nearPlane=56.043, farPlane=88.553, width=20.076, 
    height=19.406, projection=PERSPECTIVE, cameraPosition=(10.8, 6.8331, 
    72.298), cameraUpVector=(0, 1, 0), cameraTarget=(10.8, 6.8331, 0), 
    viewOffsetX=0.079103, viewOffsetY=3.4235, autoFit=OFF)""")
#: session.views['User-1']
cliCommand("""vp.view.setValues(session.views['User-1'])""")
cliCommand("""raise ValueError('alles in Ordnung?')""")
#* ValueError: alles in Ordnung?
session.viewports['Viewport: 1'].setValues(origin=(5.13046836853027, 
    -25.4333343505859))
session.viewports['Viewport: 1'].setValues(origin=(-38.4785118103027, 
    -25.6666717529297))
session.viewports['Viewport: 1'].setValues(origin=(-91.6488265991211, 
    -26.8333435058594))
session.viewports['Viewport: 1'].setValues(origin=(-36.146484375, 
    -26.6000061035156))
session.viewports['Viewport: 1'].setValues(origin=(-8.62851524353027, -24.5))
cliCommand("""# Modell zum Auswaehlen, & Auswerten""")
cliCommand("""# MP, 2021-11-22""")
cliCommand("""from abaqus import *""")
cliCommand("""from abaqusConstants import *""")
cliCommand("""from caeModules import *""")
cliCommand("""TOL = 1e-4""")
cliCommand("""session.journalOptions.setValues(replayGeometry=COORDINATE,
        		         recoverGeometry=COORDINATE)""")
cliCommand("""# Parameter vom Modell (N-mm-s)""")
cliCommand("""# ------------------------------------------------------""")
cliCommand("""b,h = 20.,12.""")
cliCommand("""r = 2.""")
cliCommand("""cent_list = ((6.,6.),(12.,8.))""")
cliCommand("""E = 210000.""")
cliCommand("""nu = 0.3""")
cliCommand("""sig_y = 300.""")
cliCommand("""E_pl = 15000.""")
cliCommand("""# Modell erstellen""")
cliCommand("""# ------------------------------------------------------------------""")
cliCommand("""model_name = 'geometrie-sachen'""")
cliCommand("""odb_name = 'platte-manuell'""")
cliCommand("""vp = session.viewports['Viewport: 1']""")
cliCommand("""# open the odb with the odb_name""")
cliCommand("""odb = session.openOdb(name=odb_name+'.odb')""")
cliCommand("""vp.setValues(displayedObject=odb)""")
cliCommand("""vp.odbDisplay.display.setValues(plotState=(CONTOURS_ON_DEF,))""")
cliCommand("""vp.odbDisplay.setPrimaryVariable(variableLabel='S', outputPosition=INTEGRATION_POINT,
                                 refinement=(COMPONENT, 'S11'),)""")
cliCommand("""# Change size of viewport (e.g. 200x200 pixel)""")
cliCommand("""vp.restore()""")
cliCommand("""# position of the viewport""")
cliCommand("""vp.setValues(origin=(50,-100))""")
cliCommand("""vp.setValues(width=200, height=200)""")
cliCommand("""session.View(name='User-1', nearPlane=56.043, farPlane=88.553, width=20.076, 
    height=19.406, projection=PERSPECTIVE, cameraPosition=(10.8, 6.8331, 
    72.298), cameraUpVector=(0, 1, 0), cameraTarget=(10.8, 6.8331, 0), 
    viewOffsetX=0.079103, viewOffsetY=3.4235, autoFit=OFF)""")
#: session.views['User-1']
cliCommand("""vp.view.setValues(session.views['User-1'])""")
session.viewports['Viewport: 1'].setValues(origin=(3.96445298194885, 
    -28.2333374023438))
session.viewports['Viewport: 1'].setValues(origin=(9.328125, 
    -29.4000091552734))
session.viewports['Viewport: 1'].view.setValues(nearPlane=55.6752, 
    farPlane=88.9208, width=19.9442, height=19.4497, viewOffsetX=-0.674365, 
    viewOffsetY=3.23623)
session.viewports['Viewport: 1'].view.setValues(width=18.7469, height=18.2821, 
    viewOffsetX=-0.583724, viewOffsetY=3.11474)
session.viewports['Viewport: 1'].view.setValues(nearPlane=55.9041, 
    farPlane=88.6919, width=18.8246, height=18.3579, viewOffsetX=-0.319639, 
    viewOffsetY=3.54986)
session.View(name='User-1', nearPlane=55.904, farPlane=88.692, width=18.825, 
    height=18.358, projection=PERSPECTIVE, cameraPosition=(10.8, 6.8331, 
    72.298), cameraUpVector=(0, 1, 0), cameraTarget=(10.8, 6.8331, 0), 
    viewOffsetX=-0.31964, viewOffsetY=3.5499, autoFit=OFF)
